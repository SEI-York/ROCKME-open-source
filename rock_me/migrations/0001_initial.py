# Generated by Django 3.0.6 on 2020-10-13 23:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='HelpText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table', models.CharField(max_length=255)),
                ('field', models.CharField(max_length=255)),
                ('language', models.CharField(choices=[('English', 'English'), ('Italian', 'Italian'), ('French', 'French')], default=('English', 'English'), max_length=255)),
                ('help_text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='WorkPackage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_type', models.CharField(max_length=8)),
                ('description', models.TextField()),
                ('due_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='RockProjectDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_type', models.CharField(choices=[('ACTIVITY', 'Activity'), ('TASK', 'Task'), ('CASE-STUDY', 'Case Study')], default='ACTIVITY', max_length=10)),
                ('contact_person', models.TextField(blank=True, null=True)),
                ('budget_currency', models.CharField(choices=[('EUR', 'EUR'), ('GBP', 'GBP'), ('USD', 'USD'), ('SEK', 'SEK'), ('THB', 'THB'), ('EEK', 'EEK'), ('AUD', 'AUD'), ('CAD', 'CAD'), ('NOK', 'NOK')], default='EUR', max_length=3)),
                ('budget_amount', models.IntegerField(blank=True, null=True)),
                ('associated_wps', models.ManyToManyField(blank=True, related_name='getclaim_associatedwps', to='rock_me.WorkPackage')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rock_me.City')),
                ('lead_administrative_organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects_administrative_lead', to='core.Organisation')),
                ('lead_scientific_organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects_scientific_lead', to='core.Organisation')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Project')),
                ('work_package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='getclaim_workpackage', to='rock_me.WorkPackage')),
            ],
        ),
        migrations.CreateModel(
            name='FundingMechanism',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mechanism', models.CharField(choices=[('Loans', 'Loans'), ('Grants', 'Grants'), ('Crowdfunding', 'Crowdfunding'), ('Mutual Funding', 'Mutual Funding'), ('Microfinance', 'Microfinance'), ('Joint Venture', 'Joint Venture'), ('Venture Capital', 'Venture Capital'), ('Angel Investors', 'Angel Investors'), ('(Direct) Consulting Services', '(Direct) Consulting Services'), ('(Direct) Technologies', '(Direct) Technologies'), ('Insurances', 'Insurances'), ('Direct Investment', 'Direct Investment'), ('Foreign Direct Investment', 'Foreign Direct Investment'), ('Publicly leveraged private loans', 'Publicly leveraged private loans'), ('Publicly guaranteed private loans', 'Publicly guaranteed private loans'), ('Public Private Partnership', 'Public Private Partnership'), ('Sponsorships', 'Sponsorships'), ('Other', 'Other (Please specify below)')], default='Loans', max_length=33)),
                ('other_details', models.CharField(blank=True, max_length=255, null=True)),
                ('provider', models.CharField(blank=True, max_length=255, null=True)),
                ('provider_ownership', models.CharField(choices=[('Private', 'Private'), ('Public', 'Public'), ('Part private and part public', 'Part private and part public'), ('Public–private partnership (PPP)', 'Public–private partnership (PPP)'), ('Other', 'Other')], default='Private', max_length=32)),
                ('provider_type', models.CharField(choices=[('Bank', 'Bank'), ('Insurance', 'Insurance'), ('Angel Investor', 'Angel Investor'), ('Investment Management Company', 'Investment Management Company'), ('Other Private Company (From Financial Sector)', 'Other Private Company (From Financial Sector)'), ('Other Private Company (Not From Financial Sector)', 'Other Private Company (Not From Financial Sector)'), ('Public Private Partnership', 'Public Private Partnership'), ('City', 'City'), ('Province / Department / Metropolitan area (NUTS 3)', 'Province / Department / Metropolitan area (NUTS 3)'), ('Region (NUTS 2)', 'Region (NUTS 2)'), ('National', 'National'), ('European', 'European'), ('UNESCO or other UN agencies', 'UNESCO or other UN agencies'), ('World Bank', 'World Bank'), ('Other', 'Other')], default='Bank', max_length=50)),
                ('currency', models.CharField(choices=[('EUR', 'EUR'), ('GBP', 'GBP'), ('USD', 'USD'), ('SEK', 'SEK'), ('THB', 'THB'), ('EEK', 'EEK'), ('AUD', 'AUD'), ('CAD', 'CAD'), ('NOK', 'NOK')], default='EUR', max_length=3)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Project')),
            ],
        ),
        migrations.CreateModel(
            name='DiaryEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('category', models.CharField(choices=[('Note', 'Note'), ('Public Event', 'Public Event'), ('Media Coverage', 'Media Coverage'), ('Publication', 'Publication'), ('Meeting', 'Meeting'), ('Data Collection', 'Data Collection')], default='Note', max_length=15)),
                ('external_links', models.ManyToManyField(blank=True, to='core.ExternalLink')),
                ('outcome', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Outcome')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Project')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partners', models.TextField(blank=True, null=True)),
                ('activities', models.TextField(blank=True, null=True)),
                ('resources', models.TextField(blank=True, null=True)),
                ('value_proposition', models.TextField(blank=True, null=True)),
                ('customer_relationship', models.TextField(blank=True, null=True)),
                ('channels', models.TextField(blank=True, null=True)),
                ('customer_segments', models.TextField(blank=True, null=True)),
                ('costs', models.TextField(blank=True, null=True)),
                ('revenues', models.TextField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Project')),
            ],
        ),
    ]
